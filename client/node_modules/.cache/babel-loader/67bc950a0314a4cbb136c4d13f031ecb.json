{"ast":null,"code":"var _jsxFileName = \"/Users/ray-ez/Desktop/Chat App/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport ChatRoomBar from '../ChatRoom/chatRoom';\nimport './Chat.css';\nimport ChatMessages from '../Messages/Messages';\nimport InputMessage from '../Input/Input';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const EndPoint = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(EndPoint);\n    setName(name);\n    setRoom(room); // Params : first is the event , second is the data we we want to pass, \n    //third is callback for error handling stuff \n\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      // Emitting event name should be same on server side \n      socket.emit('disconnet');\n      socket.off();\n    };\n  }, [EndPoint, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    }, [messages]);\n  });\n\n  const sendMessage = event => {\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(``));\n    }\n\n    event.preventDefault();\n  };\n\n  console.log(messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChatRoomBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_area-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ChatMessages, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(InputMessage, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/ray-ez/Desktop/Chat App/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","ChatRoomBar","ChatMessages","InputMessage","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","EndPoint","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport ChatRoomBar from '../ChatRoom/chatRoom';\nimport './Chat.css';\n\nimport ChatMessages from '../Messages/Messages';\nimport InputMessage from '../Input/Input';\n\n\nlet socket;\nconst Chat = ({ location }) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const EndPoint = 'localhost:5000';\n\n    useEffect(()=>{\n        const {name, room} = queryString.parse(location.search);\n\n        socket = io(EndPoint)\n        setName(name);\n        setRoom(room);\n        // Params : first is the event , second is the data we we want to pass, \n        //third is callback for error handling stuff \n        socket.emit('join',{name,room}, ()=>{}\n        );\n        \n        return ()=>{\n            // Emitting event name should be same on server side \n            socket.emit('disconnet');\n            \n            socket.off();\n        }\n    }, [EndPoint, location.search]);\n\n    useEffect(()=> {\n        socket.on('message', (message)=>{\n            setMessages([...messages, message]);\n        }, [messages]);\n    });\n\n    const sendMessage = (event)=>{\n        if(message){\n            socket.emit('sendMessage', message, ()=> setMessage(``));\n        }\n        event.preventDefault();\n    }\n    console.log(messages);\n    return(\n        <div className=\"main\">\n            <div className=\"chat\">\n                <ChatRoomBar room={room}/>\n                <div className=\"chat_area\">\n                    <div className=\"chat_area-view\">\n                    <ChatMessages messages={messages} name={name}/>\n                    </div>\n                </div>\n                \n                <InputMessage message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}